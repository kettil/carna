// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`command start it should be create the expected builder: options 1`] = `
Array [
  Object {
    "build-dependencies": Object {
      "alias": "b",
      "default": false,
      "describe": "In a monorepo, all packages are built beforehand",
      "group": "start-Options",
      "type": "boolean",
    },
    "clear-console": Object {
      "alias": "c",
      "default": false,
      "describe": "Clear console on each restart (only with watch mode)",
      "group": "start-Options",
      "type": "boolean",
    },
    "script": Object {
      "alias": "s",
      "describe": "Script to be called (default: src/index.[ts|js])",
      "group": "start-Options",
      "type": "string",
    },
    "watch": Object {
      "alias": "w",
      "default": false,
      "describe": "Reload your app on source file changes",
      "group": "start-Options",
      "type": "boolean",
    },
  },
]
`;

exports[`command start it should be create the expected builder: usage 1`] = `
Array [
  "Usage: $0 start [options]",
]
`;

exports[`command start it should work with hooks: child-process 1`] = `
Object {
  "args": Array [
    "run",
    "precarna:start",
  ],
  "command": "npm",
  "cwd": "/path/to/project",
  "env": Object {},
}
`;

exports[`command start it should work with hooks: child-process 2`] = `
Object {
  "args": Array [
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "--config-file",
    "/path/to/project/babel.config.js",
    "/path/to/project/src/index.ts",
  ],
  "command": "/path/to/project/node_modules/.bin/babel-node",
  "cwd": "/path/to/project",
  "env": Object {
    "DOTENV_CONFIG_PATH": ".env",
  },
}
`;

exports[`command start it should work with hooks: child-process 3`] = `
Object {
  "args": Array [
    "run",
    "postcarna:start",
  ],
  "command": "npm",
  "cwd": "/path/to/project",
  "env": Object {},
}
`;

exports[`command start it should work with hooks: process-stdin 1`] = `
Object {
  "mode": true,
}
`;

exports[`command start it should work with hooks: process-stdin 2`] = `
Object {
  "encoding": "utf8",
}
`;

exports[`command start it should work with hooks: process-stdin 3`] = `
Object {
  "callback": [Function],
  "event": "data",
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: false]: child-process 1`] = `
Object {
  "args": Array [
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "--config-file",
    "/path/to/project/babel.config.js",
    "/path/to/project/packages/a/src/index.ts",
  ],
  "command": "/path/to/project/node_modules/.bin/babel-node",
  "cwd": "/path/to/project/packages/a",
  "env": Object {
    "DOTENV_CONFIG_PATH": "../../.env",
  },
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: false]: glob 1`] = `
Object {
  "options": Object {
    "absolute": true,
    "cwd": "/path/to/project",
  },
  "pattern": "packages/*",
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: false]: process-stdin 1`] = `
Object {
  "mode": true,
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: false]: process-stdin 2`] = `
Object {
  "encoding": "utf8",
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: false]: process-stdin 3`] = `
Object {
  "callback": [Function],
  "event": "data",
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: true]: child-process 1`] = `
Object {
  "args": Array [
    "-d",
    "build",
    "--config-file",
    "/path/to/project/babel.config.js",
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "src",
  ],
  "command": "/path/to/project/node_modules/.bin/babel",
  "cwd": "/path/to/project/packages/b",
  "env": Object {},
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: true]: child-process 2`] = `
Object {
  "args": Array [
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "--config-file",
    "/path/to/project/babel.config.js",
    "/path/to/project/packages/a/src/index.ts",
  ],
  "command": "/path/to/project/node_modules/.bin/babel-node",
  "cwd": "/path/to/project/packages/a",
  "env": Object {
    "DOTENV_CONFIG_PATH": "../../.env",
  },
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: true]: glob 1`] = `
Object {
  "options": Object {
    "absolute": true,
    "cwd": "/path/to/project",
  },
  "pattern": "packages/*",
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: true]: process-stdin 1`] = `
Object {
  "mode": true,
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: true]: process-stdin 2`] = `
Object {
  "encoding": "utf8",
}
`;

exports[`command start it should work with workspaces [watch: false, buildDependencies: true]: process-stdin 3`] = `
Object {
  "callback": [Function],
  "event": "data",
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: false]: child-process 1`] = `
Object {
  "args": Array [
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "--config-file",
    "/path/to/project/babel.config.js",
    "--watch",
    "/path/to/project/packages/b/build",
    "/path/to/project/packages/a/src/index.ts",
  ],
  "command": "/path/to/project/node_modules/.bin/babel-watch",
  "cwd": "/path/to/project/packages/a",
  "env": Object {
    "DOTENV_CONFIG_PATH": "../../.env",
  },
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: false]: glob 1`] = `
Object {
  "options": Object {
    "absolute": true,
    "cwd": "/path/to/project",
  },
  "pattern": "packages/*",
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: false]: process-stdin 1`] = `
Object {
  "mode": true,
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: false]: process-stdin 2`] = `
Object {
  "encoding": "utf8",
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: false]: process-stdin 3`] = `
Object {
  "callback": [Function],
  "event": "data",
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: true]: child-process 1`] = `
Object {
  "args": Array [
    "-d",
    "build",
    "--config-file",
    "/path/to/project/babel.config.js",
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "src",
  ],
  "command": "/path/to/project/node_modules/.bin/babel",
  "cwd": "/path/to/project/packages/b",
  "env": Object {},
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: true]: child-process 2`] = `
Object {
  "args": Array [
    "-d",
    "build",
    "--config-file",
    "/path/to/project/babel.config.js",
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "--watch",
    "--skip-initial-build",
    "src",
  ],
  "command": "/path/to/project/node_modules/.bin/babel",
  "cwd": "/path/to/project/packages/b",
  "env": Object {},
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: true]: child-process 3`] = `
Object {
  "args": Array [
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "--config-file",
    "/path/to/project/babel.config.js",
    "--watch",
    "/path/to/project/packages/b/build",
    "/path/to/project/packages/a/src/index.ts",
  ],
  "command": "/path/to/project/node_modules/.bin/babel-watch",
  "cwd": "/path/to/project/packages/a",
  "env": Object {
    "DOTENV_CONFIG_PATH": "../../.env",
  },
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: true]: glob 1`] = `
Object {
  "options": Object {
    "absolute": true,
    "cwd": "/path/to/project",
  },
  "pattern": "packages/*",
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: true]: process-stdin 1`] = `
Object {
  "mode": true,
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: true]: process-stdin 2`] = `
Object {
  "encoding": "utf8",
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: true]: process-stdin 3`] = `
Object {
  "callback": [Function],
  "event": "data",
}
`;

exports[`command start it should work with workspaces [watch: true, buildDependencies: true]: spawn 1`] = `2`;

exports[`command start it should work: child-process 1`] = `
Object {
  "args": Array [
    "--extensions",
    ".js,.jsx,.ts,.tsx,.json",
    "--config-file",
    "/path/to/project/babel.config.js",
    "/path/to/project/src/index.ts",
  ],
  "command": "/path/to/project/node_modules/.bin/babel-node",
  "cwd": "/path/to/project",
  "env": Object {
    "DOTENV_CONFIG_PATH": ".env",
  },
}
`;

exports[`command start it should work: process-stdin 1`] = `
Object {
  "mode": true,
}
`;

exports[`command start it should work: process-stdin 2`] = `
Object {
  "encoding": "utf8",
}
`;

exports[`command start it should work: process-stdin 3`] = `
Object {
  "callback": [Function],
  "event": "data",
}
`;
